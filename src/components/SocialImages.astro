---
import type { UnresolvedImageTransform } from "astro";
import { getImage } from "astro:assets";

type Props = {
  importedImage?: UnresolvedImageTransform | string;
  title: string;
  description: string;
  altText?: string;
};

const { importedImage, altText, title, description } = Astro.props;
let socialImage;
let twitterImage;
let imageUrl;
let twitterImageUrl;
if (importedImage && typeof importedImage !== "string") {
  try {
    socialImage = await getImage({
      src: importedImage.src,
      width: 256,
      height: 256,
      format: "webP",
    });
    console.log("256", socialImage);
    twitterImage = await getImage({
      src: importedImage.src,
      width: 1200,
      height: 675,
      format: "webP",
    });
    console.log("1200", twitterImage);
    imageUrl = new URL(socialImage.src, Astro.url);
    twitterImageUrl = new URL(twitterImage.src, Astro.url);
    // socialImage = twitterImage;
  } catch (error) {
    console.log(error);
  }
} else {
  imageUrl =
    typeof importedImage === "string"
      ? new URL(importedImage, Astro.url)
      : null;
  twitterImageUrl =
    typeof importedImage === "string"
      ? new URL(importedImage, Astro.url)
      : null;
}
---

<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<>
  {
    socialImage ? (
      <>
        <meta property="og:image" content={imageUrl} itemprop="image" />
        <meta
          property="og:image:type"
          content={`image/${socialImage?.rawOptions.format}`}
        />
        <meta
          property="og:image:width"
          content={String(socialImage.rawOptions.width)}
        />
        <meta
          property="og:image:height"
          content={String(socialImage.rawOptions.height)}
        />
      </>
    ) : (
      <>
        <meta property="og:image" content={imageUrl} />
      </>
    )
  }

  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={Astro.url} />
  <meta property="twitter:title" content={title} />
  <meta property="twitter:image:alt" content={altText} />
  <meta property="twitter:description" content={description} />
  {
    twitterImageUrl && (
      <meta property="twitter:image" content={twitterImageUrl} />
    )
  }
</>
