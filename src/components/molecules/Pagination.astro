---
type Props = {
  length: number;
  currentUrl: string;
  currentPage: number;
  firstUrl: string;
  prevUrl: string;
  nextUrl: string;
  lastUrl: string;
};
const { length, currentUrl, currentPage, firstUrl, prevUrl, nextUrl, lastUrl } =
  Astro.props;
const paginationList = Array.from({ length: length }, (_, i) => i + 1);
---

<nav
  aria-label="Blog pages"
  class="pagination pagination-default flex space-x-4 bg-white"
>
  {
    firstUrl == currentUrl ? (
      <span class="pagination__link disabled">
        <i class="pi-angle-left" />
        <i class="pi-angle-left" />
      </span>
    ) : (
      <a href={firstUrl} class="pagination__link">
        <i class="pi-angle-left" />
        <i class="pi-angle-left" />
      </a>
    )
  }

  {
    prevUrl ? (
      <a href={prevUrl} class="pagination__link">
        <i class="pi-angle-left" />
      </a>
    ) : (
      <span class="pagination__link disabled">
        <i class="pi-angle-left" />
      </span>
    )
  }

  {
    paginationList.map((num) => (
      <a
        href={`${firstUrl}${num == 1 ? "" : "/" + num}`}
        class={`pagination__link ${
          currentPage == num ? "disabled active" : ""
        }`}
      >
        {num}
      </a>
    ))
  }

  {
    !nextUrl ? (
      <span class="pagination__link disabled">
        <i class="pi-angle-right" />
      </span>
    ) : (
      <a href={nextUrl} class="pagination__link">
        <i class="pi-angle-right" />
      </a>
    )
  }

  {
    lastUrl == currentUrl ? (
      <span class="pagination__link disabled">
        <i class="pi-angle-right" />
        <i class="pi-angle-right" />
      </span>
    ) : (
      <a href={lastUrl} class="pagination__link">
        <i class="pi-angle-right" />
        <i class="pi-angle-right" />
      </a>
    )
  }
</nav>
