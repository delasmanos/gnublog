---
import type { CSSProperty } from "astro/types";
// import {
//   Image,
//   type LocalImageProps,
//   type RemoteImageProps,
// } from "astro:assets";
import type { CollectionEntry } from "astro:content";
type I = CollectionEntry<"blog">["data"]["heroImage"];
type Props = I & {
  size?: CSSProperty;
  imagePositon?:
    | "object-left-top"
    | "object-top"
    | "object-right-top"
    | "object-left"
    | "object-center"
    | "object-right"
    | "object-left-bottom"
    | "object-bottom"
    | "object-right-bottom";
};

const classes = [
  "object-left-top",
  "object-top bg",
  "object-right-top",
  "object-left ",
  "object-center",
  "object-right",
  "object-left-bottom",
  "object-bottom",
  "object-right-bottom",
];

const { imagePositon, size, ...rest } = Astro.props satisfies Props;
const objectClass = imagePositon
  ? classes.find((e) => e === imagePositon)
  : "center";
console.log(objectClass);
const dimension = size ? size : "40rem";
---

<div
  id="image-crop"
  style={{
    width: dimension,
    height: dimension,
  }}
  class="relative max-w-full overflow-hidden rounded-full object-bottom"
  {...rest}
>
  <!-- <Image {...rest} /> -->
</div>
