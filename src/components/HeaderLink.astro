---
// disable typecheck because object destructering does not work properly in astro files
// and typescript complains on spreading props into the link component
// @ts-nocheck
import type { HTMLAttributes } from "astro/types";
import { twMerge } from "tailwind-merge";
import Link from "./Link.astro";

type Props = HTMLAttributes<"a"> & { showUnderline?: boolean };

const { href, class: className, showUnderline, ...props } = Astro.props;
const decorate = typeof showUnderline === "undefined" ? true : showUnderline;
const { pathname } = Astro.url;
const isRoot = href === "/";
const isSub = !isRoot && pathname.includes(href?.toString() ?? "");
const isActive =
  href === pathname || href === pathname.replace(/\/$/, "") || isSub;
//TODO Why typescript complains IntrisnsicAttributes when using class:list
---

<Link
  href={href}
  style={{ "text-shadow": "2px 2px var(--chili-red)" }}
  {...props}
  class:list={[
    twMerge(
      className,
      // "text-transparent",
      "hover:text-gnurange-light",
      "drop-shadow-md",
    ),
    { "font-bolder ": isActive },
    { "underline underline-offset-4": decorate },
    { "no-underline": !isActive || isRoot },
  ]}
>
  <slot />
</Link>
<style>
  /* a {
    display: inline-block;
    text-decoration: none;
    text-shadow: 2px 2px #ff4400;
  }
  ,
  a.active.underline {
    text-decoration: underline;
    text-underline-offset: 0.4rem;
  }
  ,
   a.active {
    font-weight: bolder;
  }  */
</style>
